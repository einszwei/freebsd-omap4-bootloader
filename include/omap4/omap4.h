/*-
 * Copyright (c) 2015
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _OMAP4_H_
#define _OMAP4_H_

/*
 * L4 Peripherals - L4 Wakeup and L4 Core now
 */
#define OMAP44XX_L4_CORE_BASE	0x4a000000
#define OMAP44XX_L4_WKUP_BASE	0x4a300000
#define OMAP44XX_L4_PER_BASE	0x48000000

#define OMAP44XX_DRAM_ADDR_SPACE_START	0x80000000
#define OMAP44XX_DRAM_ADDR_SPACE_END	0xd0000000
#define DRAM_ADDR_SPACE_START	OMAP44XX_DRAM_ADDR_SPACE_START
#define DRAM_ADDR_SPACE_END	OMAP44XX_DRAM_ADDR_SPACE_END

/* CONTROL_ID_CODE */
#define CONTROL_ID_CODE		0x4a002204
#define STD_FUSE_DIE_ID_0	0x4a002200
#define STD_FUSE_DIE_ID_1	0x4a002208
#define STD_FUSE_DIE_ID_2	0x4a00220c
#define STD_FUSE_DIE_ID_3	0x4a002210

#define OMAP4430_ID_INVALID	0xffffffff
#define OMAP4430_ES1_0		0x44300100
#define OMAP4430_ES2_0		0x44300200
#define OMAP4430_ES2_1		0x44300210
#define OMAP4430_ES2_2		0x44300220
#define OMAP4430_ES2_3		0x44300230
#define OMAP4460_ES1_0		0x44600100
#define OMAP4460_ES1_1		0x44600110
#define OMAP4470_ES1_0		0x44700100

#define OMAP5430_ID_INVALID	0
#define OMAP5430_ES1_0		0x54300100
#define OMAP5432_ES1_0		0x54320100
#define OMAP5430_ES2_0		0x54300200
#define OMAP5432_ES2_0		0x54320200

#define OMAP4430_CONTROL_ID_CODE_ES1_0	0x0b85202f
#define OMAP4430_CONTROL_ID_CODE_ES2_0	0x1b85202f
#define OMAP4430_CONTROL_ID_CODE_ES2_1	0x3b95c02f
#define OMAP4430_CONTROL_ID_CODE_ES2_2	0x4b95c02f
#define OMAP4430_CONTROL_ID_CODE_ES2_3	0x6b95c02f
#define OMAP4460_CONTROL_ID_CODE_ES1_0	0x0b94e02f
#define OMAP4460_CONTROL_ID_CODE_ES1_1	0x2b94e02f
#define OMAP4470_CONTROL_ID_CODE_ES1_0	0x0b97502f

/* UART */
#define UART1_BASE		(OMAP44XX_L4_PER_BASE + 0x6a000)
#define UART2_BASE		(OMAP44XX_L4_PER_BASE + 0x6c000)
#define UART3_BASE		(OMAP44XX_L4_PER_BASE + 0x20000)

/* General Purpose Timers */
#define GPT1_BASE		(OMAP44XX_L4_WKUP_BASE + 0x18000)
#define GPT2_BASE		(OMAP44XX_L4_PER_BASE  + 0x32000)
#define GPT3_BASE		(OMAP44XX_L4_PER_BASE  + 0x34000)

/* Watchdog Timer2 - MPU watchdog */
#define WDT2_BASE		(OMAP44XX_L4_WKUP_BASE + 0x14000)

/*
 * Hardware Register Details
 */

/* GP Timer */
#define TCLR_ST			(0x1 << 0)
#define TCLR_AR			(0x1 << 1)
#define TCLR_PRE		(0x1 << 5)

/* MUSB base */
#define MUSB_BASE		(OMAP44XX_L4_CORE_BASE + 0xab000)

/* OMAP4 GPIO registers */
#define OMAP_GPIO_REVISION		0x0000
#define OMAP_GPIO_SYSCONFIG		0x0010
#define OMAP_GPIO_SYSSTATUS		0x0114
#define OMAP_GPIO_IRQSTATUS1		0x0118
#define OMAP_GPIO_IRQSTATUS2		0x0128
#define OMAP_GPIO_IRQENABLE2		0x012c
#define OMAP_GPIO_IRQENABLE1		0x011c
#define OMAP_GPIO_WAKE_EN		0x0120
#define OMAP_GPIO_CTRL			0x0130
#define OMAP_GPIO_OE			0x0134
#define OMAP_GPIO_DATAIN		0x0138
#define OMAP_GPIO_DATAOUT		0x013c
#define OMAP_GPIO_LEVELDETECT0		0x0140
#define OMAP_GPIO_LEVELDETECT1		0x0144
#define OMAP_GPIO_RISINGDETECT		0x0148
#define OMAP_GPIO_FALLINGDETECT		0x014c
#define OMAP_GPIO_DEBOUNCE_EN		0x0150
#define OMAP_GPIO_DEBOUNCE_VAL		0x0154
#define OMAP_GPIO_CLEARIRQENABLE1	0x0160
#define OMAP_GPIO_SETIRQENABLE1		0x0164
#define OMAP_GPIO_CLEARWKUENA		0x0180
#define OMAP_GPIO_SETWKUENA		0x0184
#define OMAP_GPIO_CLEARDATAOUT		0x0190
#define OMAP_GPIO_SETDATAOUT		0x0194

/* PRM */
#define PRM_BASE			0x4a306000
#define PRM_DEVICE_BASE			(PRM_BASE + 0x1b00)

#define PRM_RSTCTRL			PRM_DEVICE_BASE
#define PRM_RSTCTRL_RESET		0x01
#define PRM_RSTST			(PRM_DEVICE_BASE + 0x4)
#define PRM_RSTST_WARM_RESET_MASK	0x07ea

/* Control Module */
#define LDOSRAM_ACTMODE_VSET_IN_MASK	(0x1f << 5)
#define LDOSRAM_VOLT_CTRL_OVERRIDE	0x0401040f
#define CONTROL_EFUSE_1_OVERRIDE	0x1c4d0110
#define CONTROL_EFUSE_2_OVERRIDE	0x99084000

/* LPDDR2 IO regs */
#define CONTROL_LPDDR2IO_SLEW_125PS_DRV8_PULL_DOWN	0x1C1C1C1C
#define CONTROL_LPDDR2IO_SLEW_325PS_DRV8_GATE_KEEPER	0x9E9E9E9E
#define CONTROL_LPDDR2IO_SLEW_315PS_DRV12_PULL_DOWN	0x7C7C7C7C
#define LPDDR2IO_GR10_WD_MASK				(3 << 17)
#define CONTROL_LPDDR2IO_3_VAL		0xA0888C0F

/* CONTROL_EFUSE_2 */
#define CONTROL_EFUSE_2_NMOS_PMOS_PTV_CODE_1		0x00ffc000

#define MMC1_PWRDNZ					(1 << 26)
#define MMC1_PBIASLITE_PWRDNZ				(1 << 22)
#define MMC1_PBIASLITE_VMODE				(1 << 21)

/* ABB settings */
#define OMAP_ABB_SETTLING_TIME		50
#define OMAP_ABB_CLOCK_CYCLES		16

/* ABB tranxdone mask */
#define OMAP_ABB_MPU_TXDONE_MASK	(0x1 << 7)

/* ABB */
#define OMAP_ABB_NOMINAL_OPP		0
#define OMAP_ABB_FAST_OPP		1
#define OMAP_ABB_SLOW_OPP		3
#define OMAP_ABB_CONTROL_FAST_OPP_SEL_MASK		(0x1 << 0)
#define OMAP_ABB_CONTROL_SLOW_OPP_SEL_MASK		(0x1 << 1)
#define OMAP_ABB_CONTROL_OPP_CHANGE_MASK		(0x1 << 2)
#define OMAP_ABB_CONTROL_SR2_IN_TRANSITION_MASK		(0x1 << 6)
#define OMAP_ABB_SETUP_SR2EN_MASK			(0x1 << 0)
#define OMAP_ABB_SETUP_ACTIVE_FBB_SEL_MASK		(0x1 << 2)
#define OMAP_ABB_SETUP_ACTIVE_RBB_SEL_MASK		(0x1 << 1)
#define OMAP_ABB_SETUP_SR2_WTCNT_VALUE_MASK		(0xff << 8)

/*
 * Non-secure SRAM Addresses
 * Non-secure RAM starts at 0x40300000 for GP devices. But we keep SRAM_BASE
 * at 0x40304000(EMU base) so that our code works for both EMU and GP
 */
#define NON_SECURE_SRAM_START	0x40304000
#define NON_SECURE_SRAM_END	0x4030E000	/* Not inclusive */

#define OMAP44XX_SRAM_BASE		0x40300000
#define OMAP44XX_SRAM_SP_BASE		0x4030d000
#define OMAP44XX_SRAM_SCRATCH_SPACE	0x4030c000 /* start of public stack */

#define OMAP44XX_SCRATCH_OMAP_REV	OMAP44XX_SRAM_SCRATCH_SPACE
#define OMAP44XX_SCRATCH_EMIF_SIZE	(OMAP44XX_SRAM_SCRATCH_SPACE + 0x4)
#define OMAP44XX_SCRATCH_EMIF_T_NUM	(OMAP44XX_SRAM_SCRATCH_SPACE + 0xC)
#define OMAP44XX_SCRATCH_EMIF_T_DEN	(OMAP44XX_SRAM_SCRATCH_SPACE + 0x10)
#define OMAP44XX_SCRATCH_PRCM_PTR	(OMAP44XX_SRAM_SCRATCH_SPACE + 0x14)
#define OMAP44XX_SCRATCH_DPLLS_PTR	(OMAP44XX_SRAM_SCRATCH_SPACE + 0x18)
#define OMAP44XX_SCRATCH_VCORES_PTR	(OMAP44XX_SRAM_SCRATCH_SPACE + 0x1C)
#define OMAP44XX_SCRATCH_SYS_CTRL	(OMAP44XX_SRAM_SCRATCH_SPACE + 0x20)
#define OMAP44XX_SCRATCH_BOOT_PARAMS	(OMAP44XX_SRAM_SCRATCH_SPACE + 0x24)

#define OMAP44XX_SDRAM_BASE	0x40300000

#define EMIF_PRECALCULATED_TIMING_REGS

#endif /* !_OMAP4_H_ */
